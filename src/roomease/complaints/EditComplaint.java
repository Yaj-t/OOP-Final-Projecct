package roomease.complaints;

import database.ComplaintsDAO;
import database.EmployeeLogs;
import util.Session;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import util.WindowCloseHandler;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import util.Complaint;
import util.EmployeeActionLog;

/**
 *
 * The EditComplaint class provides functionality to edit an existing complaint in the system.
 * It displays the details of the selected complaint, such as its description, status, and date.
 * It allows the user to modify these details and submit the updated complaint to the system.
 * It also logs the actions performed by the user on the complaint.
 */
public class EditComplaint extends javax.swing.JFrame {
    /** Creates a global Complaint type field */
    private Complaint complaint;
    
  
    public Complaint getComplaint() {
        return complaint;
    }

    public void setComplaint(Complaint complaint) {
        this.complaint = complaint;
    }

    /**
     * Creates new form NewJFrame
     */
    public EditComplaint() {
        System.out.println("EditComplaint");
        initComponents();
        WindowCloseHandler.addWindowClosingListener(this);
    }

    public EditComplaint(Complaint complaint) {
        System.out.println("EditComplaint");
        this.complaint = complaint;
        initComponents();
        WindowCloseHandler.addWindowClosingListener(this);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        amountLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        descriptionLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        statusCombo = new javax.swing.JComboBox<>(Complaint.Status.values());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit Complaint");

        background.setBackground(new java.awt.Color(8, 99, 117));

        amountLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        amountLabel.setForeground(new java.awt.Color(247, 236, 89));
        amountLabel.setText("Status:");

        dateLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(247, 236, 89));
        dateLabel.setText("Date:");

        submit.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        jDateChooser.setDate(Date.from(complaint.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant()));

        descriptionLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        descriptionLabel.setForeground(new java.awt.Color(247, 236, 89));
        descriptionLabel.setText("Description:");

        backButton.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        backButton.setText("Go back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        descriptionField.setColumns(20);
        descriptionField.setRows(5);
        descriptionField.setText(complaint.getDescription());
        jScrollPane1.setViewportView(descriptionField);

        statusCombo.setSelectedItem(complaint.getStatus());

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 384, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(backgroundLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dateLabel)
                                .addComponent(amountLabel)
                                .addComponent(descriptionLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(submit)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(statusCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(backButton))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(backButton)
                    .addGap(18, 18, 18)
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(backgroundLayout.createSequentialGroup()
                            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(amountLabel)
                                .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(dateLabel))
                        .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(descriptionLabel)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(submit)
                    .addContainerGap(26, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

/**

This method is called when the "submit" button is clicked. It updates the complaint with the new status, description, and date.

If the update is successful, a message is displayed indicating that the complaint was updated successfully, an employee action log is created, and the current window is closed and a new ComplaintsPage window is opened.

If there is an error with updating the complaint, an error message is displayed.

@param evt the ActionEvent object representing the "submit" button being clicked
*/
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        complaint.setStatus((Complaint.Status) statusCombo.getSelectedItem());
        complaint.setDescription(descriptionField.getText());
        Date selectedDate = jDateChooser.getDate();
        Instant instant = selectedDate.toInstant();
        ZoneId zone = ZoneId.systemDefault();
        LocalDate localDate = instant.atZone(zone).toLocalDate();
        complaint.setDate(localDate);
  
        try {
            ComplaintsDAO.updateComplaint(complaint);
            JOptionPane.showMessageDialog(this, "Complaint Updated successfully!");

            EmployeeActionLog employeeActionLog = new EmployeeActionLog(Session.getCurrentUserId(), "Updated complaint: " + complaint.getComplaintId());
            EmployeeLogs.createEmployeeActionLog(employeeActionLog);
            
            dispose();
            new ComplaintsPage().setVisible(true);
        
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error adding complaint: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e){
              JOptionPane.showMessageDialog(this, "Error adding complaint: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitActionPerformed


/**

This method is called when the "back" button is clicked. It disposes of the current window and creates a new instance
of the ComplaintsPage class, which is set to be visible.
*/
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        dispose();  
        new ComplaintsPage().setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EditComplaint(ComplaintsDAO.getComplaintById(1)).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(EditComplaint.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel background;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JLabel descriptionLabel;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Complaint.Status> statusCombo;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
