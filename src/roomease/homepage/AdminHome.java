package roomease.homepage;
import roomease.users.UsersPage;
import roomease.rooms.RoomsPage;
import user.Session;
import util.AdminLoginLogs;
import database.AdminLogs;
import database.EmployeeLogs;
import database.UserDAO;
import enums.LogType;
import java.awt.event.MouseEvent;
import java.sql.SQLException;   
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import util.EmployeeLoginLogs;
import java.time.LocalDateTime;
import roomease.LoginPage;
import roomease.logs.ActionLogs;
import util.AdminActionLog;
import util.EmployeeActionLog;
/**
 *
 * @author T-jay
 */
public class AdminHome extends javax.swing.JFrame {
    List <EmployeeLoginLogs> employeeLogsList;
    List <AdminLoginLogs> adminLogsList;
    /**
     * Creates new form Home
     */
    public AdminHome() {
        System.out.println("AdminHome");
        initComponents();
        setResizable(false);
       
        try {
             employeeLogsList = EmployeeLogs.getAllEmployeeLoginLogs();
            DefaultTableModel tableModel = (DefaultTableModel) employeeLogs.getModel();

            for (EmployeeLoginLogs log : employeeLogsList) {
                Object[] rowData = {log.getLogId(), log.getuser_id(), log.getType(), log.getLogTime()};
                tableModel.addRow(rowData);
            }
            employeeLogs.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeLoginLogs.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            adminLogsList = AdminLogs.getAllAdminLoginLogs();
            DefaultTableModel tableModel = (DefaultTableModel) adminLogs.getModel();

            for (AdminLoginLogs log : adminLogsList) {
                Object[] rowData = {log.getLogId(), log.getuser_id(), log.getType(), log.getLogTime()};
                tableModel.addRow(rowData);
            }
            adminLogs.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminLoginLogs.class.getName()).log(Level.SEVERE, null, ex);
        }
        adminLogs.setAutoCreateRowSorter(true);
        employeeLogs.setAutoCreateRowSorter(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sidePanle = new javax.swing.JPanel();
        Users1 = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        rooms = new javax.swing.JButton();
        ROOMEASE = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeLogs = new javax.swing.JTable();
        adminLogsLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        adminLogs = new javax.swing.JTable();
        EmployeeActionLogs = new javax.swing.JButton();
        AdminActionLog = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        sidePanle.setBackground(new java.awt.Color(142, 74, 73));
        sidePanle.setForeground(new java.awt.Color(213, 223, 229));

        Users1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        Users1.setForeground(new java.awt.Color(15, 15, 15));
        Users1.setText("Users");
        Users1.setToolTipText("");
        Users1.setBorderPainted(false);
        Users1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Users1.setFocusable(false);
        Users1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Users1.setPreferredSize(new java.awt.Dimension(50, 30));
        Users1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsersButton(evt);
            }
        });

        logout.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(15, 15, 15));
        logout.setText("Logout");
        logout.setToolTipText("");
        logout.setBorderPainted(false);
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logout.setFocusable(false);
        logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logout.setPreferredSize(new java.awt.Dimension(50, 30));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutButton(evt);
            }
        });

        rooms.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        rooms.setForeground(new java.awt.Color(15, 15, 15));
        rooms.setText("Rooms");
        rooms.setToolTipText("");
        rooms.setBorderPainted(false);
        rooms.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rooms.setFocusable(false);
        rooms.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rooms.setPreferredSize(new java.awt.Dimension(50, 30));
        rooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomsButton(evt);
            }
        });

        ROOMEASE.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        ROOMEASE.setForeground(new java.awt.Color(247, 236, 89));
        ROOMEASE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ROOMEASE.setText("ROOMEASE");
        ROOMEASE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout sidePanleLayout = new javax.swing.GroupLayout(sidePanle);
        sidePanle.setLayout(sidePanleLayout);
        sidePanleLayout.setHorizontalGroup(
            sidePanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ROOMEASE, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(sidePanleLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(sidePanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rooms, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Users1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sidePanleLayout.setVerticalGroup(
            sidePanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ROOMEASE)
                .addGap(18, 18, 18)
                .addComponent(Users1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rooms, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel2.setBackground(new java.awt.Color(8, 99, 117));

        employeeLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Employee ID", "Log Type", "Log Date Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeeLogs);
        if (employeeLogs.getColumnModel().getColumnCount() > 0) {
            employeeLogs.getColumnModel().getColumn(0).setPreferredWidth(30);
            employeeLogs.getColumnModel().getColumn(1).setPreferredWidth(70);
            employeeLogs.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        adminLogsLbl.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        adminLogsLbl.setForeground(new java.awt.Color(247, 236, 89));
        adminLogsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminLogsLbl.setText("Admin Logs");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(247, 236, 89));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Employee Logs");

        adminLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "AdminID", "Log Type", "Log Date Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(adminLogs);
        if (adminLogs.getColumnModel().getColumnCount() > 0) {
            adminLogs.getColumnModel().getColumn(0).setPreferredWidth(30);
            adminLogs.getColumnModel().getColumn(1).setPreferredWidth(70);
            adminLogs.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        EmployeeActionLogs.setText("Employee Action Logs");
        EmployeeActionLogs.setFocusPainted(false);
        EmployeeActionLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeActionLogs(evt);
            }
        });

        AdminActionLog.setText("Admin Action Logs");
        AdminActionLog.setFocusPainted(false);
        AdminActionLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminActionLogs(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(289, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EmployeeActionLogs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AdminActionLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(adminLogsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 267, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EmployeeActionLogs)
                .addGap(159, 159, 159)
                .addComponent(AdminActionLog)
                .addContainerGap(170, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(adminLogsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidePanle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RoomsButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomsButton

        dispose();
        new RoomsPage().setVisible(true);
    }//GEN-LAST:event_RoomsButton

    private void LogOutButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutButton

        try {
            //Create new logout log entry
            AdminLoginLogs log = new AdminLoginLogs( 0, Session.currentUser.getUserID(), LogType.LOGOUT, LocalDateTime.now());
            AdminLogs.createAdminLoginLog(log);
             dispose();
            new LoginPage().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LogOutButton

    private void UsersButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsersButton

        dispose();
        new UsersPage().setVisible(true);
    }//GEN-LAST:event_UsersButton

    private void EmployeeActionLogs(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeActionLogs

        EmployeeActionLog employeeActionLog = null;

        dispose();
        ActionLogs actionLogs = new ActionLogs(employeeActionLog);
        actionLogs.setVisible(true);

    }//GEN-LAST:event_EmployeeActionLogs

    private void AdminActionLogs(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminActionLogs
        
        AdminActionLog AdminActionLogs = null;

        dispose();
        ActionLogs actionLogs = new ActionLogs(AdminActionLogs);
        actionLogs.setVisible(true);

    }//GEN-LAST:event_AdminActionLogs
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Session.currentUser = UserDAO.getUserByID(1);
                } catch (SQLException ex) {
                    Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
                }
                new AdminHome().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminActionLog;
    private javax.swing.JButton EmployeeActionLogs;
    private javax.swing.JLabel ROOMEASE;
    private javax.swing.JButton Users1;
    private javax.swing.JTable adminLogs;
    private javax.swing.JLabel adminLogsLbl;
    private javax.swing.JTable employeeLogs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JButton rooms;
    private javax.swing.JPanel sidePanle;
    // End of variables declaration//GEN-END:variables
}
